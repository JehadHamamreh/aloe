
rtdal:
{
	enable_usrp=true; 
							
	timer_mode_single=true; /* If use_usrp=true and timer_mode_single=true, the clock source
								is the GPP. If timer_mode_single=false, clock source is USRP.
								For Ethernet USRP, use timer_mode_single=true, 
								For USB USRP, use timer_mode_single=true
								  
							   If use_usrp=false, the option timer_mode_single=true creates a 
							   	timer that synchronizes the pipeline threads. This is recommended
							   	for best real-time control. 
							 */
	
	time_slot_us=5000; 		/* time slot length, in microseconds
								IGNORED if use_usrp=true 
							*/
	cores="2";				/* Options: 
								- single value n uses 0..n cores
								- comma-separated values, e.g. 0,3,5 uses cores 0, 3 and 5. 
								- to use a single core, use 1, for instance, to use core 1
							*/
						
	path_to_libs="build/lib";
	
};


/* Logging is disabled if LOGS_ENABLED constant is set to 0 (e.g. cmake -DLOGS_ENABLED=0) */

rtdal_opts:
{
	log_enabled=true;	/* enables/disables all logging service. 
						Some tiny overhead can still be reduced setting LOGS_ENABLED to 0 */

	log_to_stout=false; /* Warning, disable log_to_stout in section other to avoid duplicates */

	log_directory="./reports";
	
	log_length_mb=16;	/* log buffers length */
	
	log_rtdal_en=false;		/* enables rtdal logging */
	log_timing_en=false;	/* enables exec control and timing logging */
	
	/* these parameters are experimental */
	correct_on_rtfault_missed = false;
	correct_on_rtfault_exec = false;
	kill_on_rtfault_missed = false;
	kill_on_rtfault_exec = false;
};

other:
{
	log_oesr_en=false;
	
	log_modules_to_stdout=true;		/* sends modules output to stdout and log files */
	
	log_modules=true; 				/* must be enabled in the app */
	log_modules_all=true;			/* enables all moduels logging */
	log_modules_join=true; 			/* join all modules logs in a single file */
	
	log_modules_level="info";		/*  debug: logs all and debug messages (moddebug);
										itf-info: itf + info logging
										itf: logs module's recv/send packet lengths;
										info: logs info messages (modinfo);
									*/

	/* This is to debug internal spsc queue messages */ 
	log_queues=false;				/* each queue to log must be enabled in the app */
	log_queues_all=false;			/* enable all queues logging */
	log_queues_join=false; 			/* join all queue logs in a single file */
	
	trace_modules_exetime=false; 	/* must be enabled in the app */
	
	join_logs_sync=false;			/* Uses a mutex to synchronize joined logs writing. May break RT */ 
}

dac:
{
	samp_freq=1920000.0;
	block_size=1792;
	rf_freq=2400000000.0;
	rf_gain=0.0;
	if_bw=8000000.0
	chain_is_tx=true;
	sample_is_short=false; // default is false and samples are complex float 
};
